{namespace ClayAutocomplete}

/**
 * This renders the component's whole content.
 */
{template .render}
	{@param _suggestions: list<?>}
	{@param? _handleBlur: any}
	{@param? _handleClick: any}
	{@param? _handleFocus: any}
	{@param? _handleHover: any}
	{@param? _handleKeydown: any}
	{@param? _handleSearch: any}
	{@param? _hasFocus: bool}
	{@param? _selectedSuggestionIndex: int}
	{@param? elementClasses: string}
	{@param? id: string}
	{@param? value: string}

	{let $expanded: $_hasFocus and $value and length($_suggestions) /}

	{let $attributes kind="attributes"}
		class="clay-autocomplete dropdown-full form-group
			{if $elementClasses}
				{sp}{$elementClasses}
			{/if}
		"

		{if $id}
			id="{$id}"
		{/if}
	{/let}

	{let $listAttributes kind="attributes"}
		class="dropdown-menu
			{if $expanded}
				{sp}show
			{/if}
		"
	{/let}

	<div {$attributes}>
		<input
			class="form-control"
			type="text"
			value="{$value}"
			data-oninput="{$_handleSearch}"
			data-onfocus="{$_handleFocus}"
			data-onblur="{$_handleBlur}"
			data-onkeydown="{$_handleKeydown}"
		>
		<ul {$listAttributes}>
			{foreach $item in $_suggestions}
				<li>
					{call .item}
						{param item: $item /}
						{param itemIndex: index($item) /}
						{param _selectedSuggestionIndex: $_selectedSuggestionIndex /}
						{param _handleClick: $_handleClick /}
						{param _handleHover: $_handleHover /}
					{/call}
				</li>
			{/foreach}
		</ul>
	</div>
{/template}

{template .item}
	{@param item: string}
	{@param itemIndex: int}
	{@param? _selectedSuggestionIndex: int}
	{@param _handleClick: any}
	{@param _handleHover: any}

	{let $elementAttributes kind="attributes"}
		class="dropdown-item
			{if $_selectedSuggestionIndex - 1 == $itemIndex}
				{sp}active
			{/if}
		"
		data-onmousedown="{$_handleClick}"
		data-onmouseover="{$_handleHover}"
		data-index="{$itemIndex}"
	{/let}
	<a {$elementAttributes}>{$item}</a>
{/template}