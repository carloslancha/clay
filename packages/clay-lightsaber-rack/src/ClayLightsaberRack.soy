{namespace ClayLightsaberRack}

/**
 * This renders the component's whole content.
 */
{template .render}
	{@param lightsabers: list<[
		active: bool,
		color: string
	]>}
	{@param? _handleLightsaberHiltClicked: any}
	{@param? elementClasses: string}
	{@param? id: string}

	{let $attributes kind="attributes"}
		class="clay-lightsaber-rack
			{if $elementClasses}
				{sp}{$elementClasses}
			{/if}
		"

		{if $id}
			id="{$id}"
		{/if}
	{/let}

	<div {$attributes}>
		<div class="row">
			{foreach $lightsaber in $lightsabers}
				<div class="col-md-2">
					{call ClayLightsaber.render}
						{param active: $lightsaber.active /}
						{param data: [
							'position': index($lightsaber)
						 ] /}
						{param color: $lightsaber.color /}
						{param contentRenderer: 'noswitch' /}
						{param events: [
							'hiltClicked': $_handleLightsaberHiltClicked
						] /}
					{/call}
				</div>
			{/foreach}
		</div>
	</div>
{/template}

/**
 * Hilt without switch
 */
{deltemplate ClayLightsaber.Hilt variant="'noswitch'"}
	{@param _handleHiltClick: any}

	<button class="hilt" data-onclick="{$_handleHiltClick}"></button>
{/deltemplate}
